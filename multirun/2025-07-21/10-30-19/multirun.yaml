hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - system.CUDA_VISIBLE_DEVICES=[4,5]
    - trainer.experiment_name=sokoban-grpo
    - actor_rollout_ref.rollout.rollout_filter_ratio=0.25
    - algorithm.adv_estimator=grpo
    - agent_proxy.reward_normalization.method=mean_std
    - actor_rollout_ref.actor.use_kl_loss=True
  job:
    name: train
    chdir: null
    override_dirname: actor_rollout_ref.actor.use_kl_loss=True,actor_rollout_ref.rollout.rollout_filter_ratio=0.25,agent_proxy.reward_normalization.method=mean_std,algorithm.adv_estimator=grpo,system.CUDA_VISIBLE_DEVICES=[4,5],trainer.experiment_name=sokoban-grpo
    id: ???
    num: ???
    config_name: _2_sokoban
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/lvnuoyan/RAGEN
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/lvnuoyan/RAGEN/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
data:
  tokenizer: null
  train_files: ~/data/rlhf/gsm8k/train.parquet
  val_files: ~/data/rlhf/gsm8k/test.parquet
  prompt_key: prompt
  reward_fn_key: data_source
  max_prompt_length: null
  max_response_length: null
  train_batch_size: null
  val_batch_size: null
  return_raw_input_ids: false
  return_raw_chat: false
  shuffle: true
  filter_overlong_prompts: false
  filter_overlong_prompts_workers: 1
  truncation: error
  image_key: images
  video_key: videos
  custom_cls:
    path: null
    name: null
actor_rollout_ref:
  hybrid_engine: true
  model:
    path: ${model_path}
    external_lib: null
    override_config: {}
    enable_gradient_checkpointing: true
    use_remove_padding: false
    use_liger: false
    lora_rank: ${lora.rank}
    lora_alpha: ${lora.alpha}
    target_modules: ${lora.target_modules}
  actor:
    strategy: fsdp
    ppo_mini_batch_size: ${ppo_mini_batch_size}
    ppo_micro_batch_size: null
    ppo_micro_batch_size_per_gpu: ${micro_batch_size_per_gpu}
    use_dynamic_bsz: false
    ppo_max_token_len_per_gpu: 16384
    grad_clip: 1.0
    clip_ratio: 0.2
    clip_ratio_low: 0.2
    clip_ratio_high: 0.28
    clip_ratio_c: 3.0
    loss_agg_mode: token-mean
    entropy_coeff: 0.001
    use_kl_loss: true
    use_torch_compile: true
    kl_loss_coef: 0.0
    kl_loss_type: kl
    ppo_epochs: 1
    shuffle: false
    ulysses_sequence_parallel_size: 1
    checkpoint:
      contents:
      - model
      - optimizer
      - extra
    optim:
      lr: 1.0e-06
      lr_warmup_steps: -1
      lr_warmup_steps_ratio: 0.0
      min_lr_ratio: null
      warmup_style: constant
      total_training_steps: -1
      weight_decay: 0.01
      betas:
      - 0.9
      - 0.999
    fsdp_config:
      wrap_policy:
        min_num_params: 0
      param_offload: false
      optimizer_offload: false
      offload_policy: false
      reshard_after_forward: true
      fsdp_size: -1
    micro_batch_size_per_gpu: ${micro_batch_size_per_gpu}
    use_ref: true
    grpo_advantage_length_weight: ${grpo_advantage_length_weight}
  ref:
    strategy: fsdp
    fsdp_config:
      param_offload: false
      reshard_after_forward: true
      wrap_policy:
        min_num_params: 0
    use_torch_compile: ${actor_rollout_ref.actor.use_torch_compile}
    log_prob_micro_batch_size: null
    log_prob_micro_batch_size_per_gpu: ${micro_batch_size_per_gpu}
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    ulysses_sequence_parallel_size: ${actor_rollout_ref.actor.ulysses_sequence_parallel_size}
  rollout:
    name: vllm
    mode: sync
    chat_scheduler: null
    temperature: 1
    top_k: -1
    top_p: 1
    use_fire_sampling: false
    prompt_length: 1
    response_length: 400
    dtype: bfloat16
    gpu_memory_utilization: 0.75
    ignore_eos: false
    enforce_eager: true
    free_cache_engine: true
    load_format: dummy_dtensor
    tensor_model_parallel_size: 1
    max_num_batched_tokens: 8192
    max_model_len: 3600
    max_num_seqs: 1024
    log_prob_micro_batch_size: null
    log_prob_micro_batch_size_per_gpu: ${micro_batch_size_per_gpu}
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    disable_log_stats: true
    enable_chunked_prefill: true
    do_sample: true
    'n': 1
    engine_kwargs:
      swap_space: null
    val_kwargs:
      top_k: -1
      top_p: 1.0
      temperature: 0.5
      'n': 1
      do_sample: true
    multi_turn:
      enable: false
      max_turns: null
      tool_config_path: null
      format: chatml
    rollout_filter_ratio: 0.25
    rollout_filter_type: std
    tp_size_check: true
critic:
  rollout_n: ${actor_rollout_ref.rollout.n}
  strategy: fsdp
  optim:
    lr: 1.0e-05
    lr_warmup_steps_ratio: 0.0
    min_lr_ratio: null
    warmup_style: constant
    total_training_steps: -1
    weight_decay: 0.01
    betas:
    - 0.9
    - 0.999
  model:
    path: ${model_path}
    tokenizer_path: ${actor_rollout_ref.model.path}
    override_config: {}
    external_lib: ${actor_rollout_ref.model.external_lib}
    enable_gradient_checkpointing: true
    use_remove_padding: false
    fsdp_config:
      param_offload: false
      optimizer_offload: false
      offload_policy: false
      reshard_after_forward: true
      wrap_policy:
        min_num_params: 0
      fsdp_size: -1
    lora_rank: ${lora.rank}
    lora_alpha: ${lora.alpha}
    target_modules: ${lora.target_modules}
  ppo_mini_batch_size: ${ppo_mini_batch_size}
  ppo_micro_batch_size: null
  ppo_micro_batch_size_per_gpu: ${micro_batch_size_per_gpu}
  forward_micro_batch_size: ${critic.ppo_micro_batch_size}
  forward_micro_batch_size_per_gpu: ${critic.ppo_micro_batch_size_per_gpu}
  use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
  ppo_max_token_len_per_gpu: 32768
  forward_max_token_len_per_gpu: ${critic.ppo_max_token_len_per_gpu}
  ulysses_sequence_parallel_size: 1
  ppo_epochs: ${actor_rollout_ref.actor.ppo_epochs}
  shuffle: ${actor_rollout_ref.actor.shuffle}
  grad_clip: 1.0
  cliprange_value: 0.5
  checkpoint:
    contents:
    - model
    - optimizer
    - extra
reward_model:
  enable: false
  strategy: fsdp
  model:
    input_tokenizer: ${actor_rollout_ref.model.path}
    path: ~/models/FsfairX-LLaMA3-RM-v0.1
    external_lib: ${actor_rollout_ref.model.external_lib}
    use_remove_padding: false
    fsdp_config:
      wrap_policy:
        min_num_params: 0
      param_offload: false
      reshard_after_forward: true
      fsdp_size: -1
  micro_batch_size: null
  micro_batch_size_per_gpu: null
  max_length: null
  ulysses_sequence_parallel_size: 1
  use_dynamic_bsz: ${critic.use_dynamic_bsz}
  forward_max_token_len_per_gpu: ${critic.forward_max_token_len_per_gpu}
  reward_manager: naive
  launch_reward_fn_async: false
custom_reward_function:
  path: null
  name: compute_score
algorithm:
  gamma: 1.0
  lam: 1.0
  adv_estimator: grpo
  norm_adv_by_std_in_grpo: true
  use_kl_in_reward: false
  kl_penalty: kl
  kl_ctrl:
    type: fixed
    kl_coef: 0.0
    horizon: 10000
    target_kl: 0.1
  high_level_gamma: 0.95
  bi_level_gae: false
trainer:
  balance_batch: true
  total_epochs: 30
  total_training_steps: 200
  project_name: ragen_latest
  experiment_name: sokoban-grpo
  logger:
  - console
  - wandb
  log_val_generations: 0
  rollout_data_dir: null
  validation_data_dir: null
  nnodes: 1
  n_gpus_per_node: 1
  save_freq: -1
  resume_mode: auto
  resume_from_path: null
  val_before_train: true
  test_freq: 10
  critic_warmup: 0
  default_hdfs_dir: null
  del_local_ckpt_after_load: false
  default_local_dir: checkpoints/${trainer.project_name}/${trainer.experiment_name}
  max_actor_ckpt_to_keep: null
  max_critic_ckpt_to_keep: null
  ray_wait_register_center_timeout: 300
  validation_steps: 1
  generations_to_log_to_wandb:
    train: 128
    val: 20
ray_init:
  num_cpus: null
custom_envs:
  SimpleSokoban:
    env_type: sokoban
    max_actions_per_traj: 10
    env_instruction: You are solving the Sokoban puzzle. You are the player and you
      need to push all boxes to targets. When you are right next to a box, you can
      push it by moving in the same direction. You cannot push a box through a wall,
      and you cannot pull a box. The answer should be a sequence of actions, like
      <answer>Right || Right || Up</answer>
    max_tokens: 100
    env_config:
      dim_x: 6
      dim_y: 6
      num_boxes: 1
      max_steps: 100
  LargerSokoban:
    env_type: sokoban
    max_actions_per_traj: 10
    env_instruction: You are solving the Sokoban puzzle. You are the player and you
      need to push all boxes to targets. When you are right next to a box, you can
      push it by moving in the same direction. You cannot push a box through a wall,
      and you cannot pull a box. The answer should be a sequence of actions, like
      <answer>Right || Right || Up</answer>
    max_tokens: 100
    env_config:
      dim_x: 8
      dim_y: 8
      num_boxes: 2
      max_steps: 100
      search_depth: 10
  SokobanDifferentGridVocab:
    env_type: sokoban
    max_actions_per_traj: 10
    env_instruction: You are solving the Sokoban puzzle. You are the player and you
      need to push all boxes to targets. When you are right next to a box, you can
      push it by moving in the same direction. You cannot push a box through a wall,
      and you cannot pull a box. The answer should be a sequence of actions, like
      <answer>Right || Right || Up</answer>
    max_tokens: 100
    env_config:
      search_depth: 30
      dim_x: 6
      dim_y: 6
      num_boxes: 1
      max_steps: 100
      grid_lookup:
        0: W
        1: .
        2: G
        3: C
        4: B
        5: A
        6: '@'
      grid_vocab:
        W: wall
        .: empty
        G: target
        C: box on target
        B: box
        A: player
        '@': player on target
  VisualSimpleSokoban:
    env_type: sokoban
    max_actions_per_traj: 10
    env_instruction: You are solving the Sokoban puzzle. You are the player and you
      need to push all boxes to targets. When you are right next to a box, you can
      push it by moving in the same direction. You cannot push a box through a wall,
      and you cannot pull a box. The answer should be a sequence of actions, like
      <answer>Right || Right || Up</answer>
    max_tokens: 100
    env_config:
      dim_x: 6
      dim_y: 6
      num_boxes: 1
      max_steps: 100
      render_mode: rgb_array
  Countdown:
    env_type: countdown
    max_actions_per_traj: 1
    env_instruction: 'You are solving the Countdown puzzle. You should use the num
      list to create an equation that equals the target. Example answer format: <think>
      To find an equation using [3, 5, 2] to get 4. Let''s check 2 + 5 = 7, 7 - 3
      = 4. So the answer is 2 + 5 - 3 = 4. </think><answer>2 + 5 - 3</answer>'
    max_tokens: 100
    env_config: null
  Bandit:
    env_type: bandit
    max_actions_per_traj: 1
    env_instruction: ''
    max_tokens: 100
    env_config:
      lo_arm_name: Phoenix
      hi_arm_name: Dragon
  BanditTest:
    env_type: bandit
    max_actions_per_traj: 1
    env_instruction: ''
    max_tokens: 100
    env_config:
      lo_arm_name: Trader
      hi_arm_name: Librarian
  FrozenLake:
    env_type: frozen_lake
    max_actions_per_traj: 10
    env_instruction: 'You are solving the FrozenLake puzzle. Forbid the whole and
      go to the target. You may move to the unintended direction due to the slippery
      ice. Example answer format: <think>To forbid the hole and go to the target,
      I should go left then go up.</think><answer>Left || Up</answer>'
    max_tokens: 100
    env_config: null
  MetamathQA:
    env_type: metamathqa
    max_actions_per_traj: 1
    env_instruction: 'You are solving Math problems. '
    max_tokens: 100
    env_config: null
  WebShop:
    env_type: webshop
    max_actions_per_traj: 9
    env_instruction: 'You are browsing an online shop. Based on the instruction, buy
      a product that close to the production description. You need to search, read
      the search results, pick a product, choose the size and color and buy. You should
      only choose action from the available actions list provided later.  Example
      process: I need a gingko light and 20x20 pillow cover that is hand painted.
      First search[gingko light 20x20 pillow cover hand painted], answer format: <answer>search[blanket
      with fleece throw]</answer>. Valid answer is search[<keywords>] or click[<clickable>].'
    max_tokens: 200
    env_config:
      dataset: small
system:
  CUDA_VISIBLE_DEVICES:
  - 4
  - 5
seed:
  train: 10000
  val: 123
micro_batch_size_per_gpu: 1
ppo_mini_batch_size: 32
model_path: /data1/lvnuoyan/llm_model/Qwen3-1.7B
enable_response_mask: true
grpo_advantage_length_weight: false
lora:
  rank: 0
  alpha: 16
  target_modules: all-linear
agent_proxy:
  max_context_window: -1
  max_turn: 5
  action_sep: '||'
  max_actions_per_turn: 5
  use_turn_scores: false
  enable_think: true
  reward_normalization:
    grouping: state
    method: mean_std
es_manager:
  format_penalty: -0.1
  train:
    env_groups: 8
    group_size: 16
    env_configs:
      tags:
      - SimpleSokoban
      n_groups:
      - 8
  val:
    env_groups: 256
    group_size: 1
    env_configs:
      tags:
      - SimpleSokoban
      n_groups:
      - 256
ctx_manager:
  generation:
    gen_config:
      response_length: ${actor_rollout_ref.rollout.response_length}
      temperature: ${actor_rollout_ref.rollout.temperature}
      top_p: ${actor_rollout_ref.rollout.top_p}
      top_k: ${actor_rollout_ref.rollout.top_k}
      kwargs: null
